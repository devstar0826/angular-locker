/*! angular-locker v0.6.3 | (c) 2014 @tymondesigns | https://github.com/tymondesigns/angular-locker */
{"version":3,"file":"angular-locker.min.js","sources":["angular-locker.min.js"],"names":["window","angular","module","config","$provide","decorator","$log","$delegate","exception","cause","debug","message","provider","_value","value","isFunction","_keyByVal","obj","Object","keys","filter","key","defaults","driver","namespace","setDefaultDriver","this","getDefaultDriver","setDefaultNamespace","getDefaultNamespace","$get","$window","$rootScope","Locker","_registeredDrivers","local","localStorage","session","sessionStorage","_resolveDriver","hasOwnProperty","Error","_driver","_namespace","_checkSupport","_supported","l","setItem","removeItem","e","_separator","_getPrefix","_serialize","toJson","_unserialize","fromJson","_setItem","$emit","indexOf","name","_getItem","getItem","_exists","_removeItem","prototype","put","isObject","forEach","isDefined","add","has","get","def","isArray","items","k","arguments","length","forget","pull","all","split","splice","join","clean","empty","clear","count","getDriver","getNamespace","supported","drivers"],"mappings":"CAUA,SAAUA,EAAQC,GAEjB,YAEAA,GAAQC,OAAO,qBAEdC,OAAO,SAAUC,GACjBA,EAASC,UAAU,qBAAsB,OAAQ,YAAa,SAASC,EAAMC,GAC5E,MAAO,UAASC,EAAWC,GAC1BH,EAAKI,MAAM,sBAAwBF,EAAUG,SAC7CJ,EAAUC,EAAWC,SAKvBG,SAAS,SAAU,WAQnB,GAAIC,GAAS,SAAUC,GACtB,MAAOb,GAAQc,WAAWD,GAASA,IAAUA,GAU1CE,EAAY,SAAUC,EAAKH,GAC9B,MAAOI,QAAOC,KAAKF,GAAKG,OAAO,SAAUC,GAAO,MAAOJ,GAAII,KAASP,IAAU,IAQ3EQ,GACHC,OAAQ,QACRC,UAAW,SAGZ,QAQCC,iBAAkB,SAAUF,GAE3B,MADAD,GAASC,OAASV,EAAOU,GAClBG,MAMRC,iBAAkB,WACjB,MAAOL,GAASC,QASjBK,oBAAqB,SAAUJ,GAE9B,MADAF,GAASE,UAAYX,EAAOW,GACrBE,MAMRG,oBAAqB,WACpB,MAAOP,GAASE,WAMjBM,MAAO,UAAW,aAAc,SAAUC,EAASC,GAQlD,QAASC,GAAQV,EAAQC,GAKxBE,KAAKQ,oBACJC,MAAOJ,EAAQK,aACfC,QAASN,EAAQO,gBASlBZ,KAAKa,eAAiB,SAAUhB,GAC/B,IAAMG,KAAKQ,mBAAmBM,eAAejB,GAC5C,KAAM,IAAIkB,OAAM,eAAiBlB,EAAS,wCAI3C,OAAOG,MAAKQ,mBAAmBX,IAAWG,KAAKQ,mBAAmBC,OAMnET,KAAKgB,QAAUhB,KAAKa,eAAehB,GAKnCG,KAAKiB,WAAanB,EASlBE,KAAKkB,cAAgB,SAAUrB,GAC9B,GAA+B,mBAApBG,MAAKmB,WAA4B,CAC3C,GAAIC,GAAI,GACR,KACCpB,KAAKa,eAAehB,GAAU,SAASwB,QAAQD,EAAGA,GAClDpB,KAAKa,eAAehB,GAAU,SAASyB,WAAWF,GAClDpB,KAAKmB,YAAa,EACjB,MAAOI,GACRvB,KAAKmB,YAAa,GAIpB,MAAOnB,MAAKmB,YAMbnB,KAAKwB,WAAa,IAQlBxB,KAAKyB,WAAa,SAAU9B,GAC3B,MAAOK,MAAKiB,WAAajB,KAAKwB,WAAa7B,GAS5CK,KAAK0B,WAAa,SAAUtC,GAC3B,IACC,MAAOb,GAAQoD,OAAOvC,GACrB,MAAOmC,GACR,MAAOnC,KAUTY,KAAK4B,aAAe,SAAUxC,GAC7B,IACC,MAAOb,GAAQsD,SAASzC,GACvB,MAAOmC,GACR,MAAOnC,KAUTY,KAAK8B,SAAW,SAAUnC,EAAKP,GAC9B,IACCY,KAAKgB,QAAQK,QAAQrB,KAAKyB,WAAW9B,GAAMK,KAAK0B,WAAWtC,IAC3DkB,EAAWyB,MAAM,qBAChBlC,OAAQG,KAAKgB,QACblB,UAAWE,KAAKiB,WAChBtB,IAAKA,EACLP,MAAOA,IAEP,MAAOmC,GACR,KACO,IAAIR,OADwF,MAA9F,qBAAsB,6BAA8B,sBAAsBiB,QAAQT,EAAEU,MACxE,+CAEA,gCAAkCtC,EAAM,OAW3DK,KAAKkC,SAAW,SAAUvC,GACzB,MAAOK,MAAK4B,aAAa5B,KAAKgB,QAAQmB,QAAQnC,KAAKyB,WAAW9B,MAS/DK,KAAKoC,QAAU,SAAUzC,GACxB,MAAOK,MAAKgB,QAAQF,eAAed,KAAKyB,WAAWtC,EAAOQ,MAS3DK,KAAKqC,YAAc,SAAU1C,GAC5B,MAAMK,MAAKoC,QAAQzC,IACnBK,KAAKgB,QAAQM,WAAWtB,KAAKyB,WAAW9B,IACxCW,EAAWyB,MAAM,uBAChBlC,OAAQG,KAAKgB,QACblB,UAAWE,KAAKiB,WAChBtB,IAAKA,KAGC,IARyB,GAiBlCY,EAAO+B,WASNC,IAAK,SAAU5C,EAAKP,GACnB,IAAMO,EAAK,OAAO,CAGlB,IAFAA,EAAMR,EAAOQ,GAETpB,EAAQiE,SAAS7C,GACpBpB,EAAQkE,QAAQ9C,EAAK,SAAUP,EAAOO,GACrCK,KAAK8B,SAASnC,EAAKP,IACjBY,UACG,CACN,IAAMzB,EAAQmE,UAAUtD,GAAQ,OAAO,CACvCY,MAAK8B,SAASnC,EAAKR,EAAOC,IAG3B,MAAOY,OAUR2C,IAAK,SAAUhD,EAAKP,GACnB,MAAMY,MAAK4C,IAAIjD,IAKR,GAJNK,KAAKuC,IAAI5C,EAAKP,IACP,IAaTyD,IAAK,SAAUlD,EAAKmD,GACnB,GAAIvE,EAAQwE,QAAQpD,GAAM,CACzB,GAAIqD,KAKJ,OAJAzE,GAAQkE,QAAQ9C,EAAK,SAAUsD,GAC1BjD,KAAK4C,IAAIK,KAAID,EAAMC,GAAKjD,KAAKkC,SAASe,KACxCjD,MAEIgD,EAGR,MAAMhD,MAAK4C,IAAIjD,GAERK,KAAKkC,SAASvC,GAF4B,IAArBuD,UAAUC,OAAeL,EAAM,QAW5DF,IAAK,SAAUjD,GACd,MAAOK,MAAKoC,QAAQzC,IASrByD,OAAQ,SAAUzD,GAWjB,MAVAA,GAAMR,EAAOQ,GAETpB,EAAQwE,QAAQpD,GACnBpB,EAAQkE,QAAQ9C,EAAK,SAAUA,GAC9BK,KAAKqC,YAAY1C,IACfK,MAEHA,KAAKqC,YAAY1C,GAGXK,MAURqD,KAAM,SAAU1D,EAAKmD,GACpB,GAAI1D,GAAQY,KAAK6C,IAAIlD,EAAKmD,EAG1B,OAFA9C,MAAKoD,OAAOzD,GAELP,GAQRkE,IAAK,WACJ,GAAIN,KAUJ,OATAzE,GAAQkE,QAAQzC,KAAKgB,QAAS,SAAU5B,EAAOO,GAC9C,GAAI4D,GAAQ5D,EAAI4D,MAAMvD,KAAKwB,WACvB+B,GAAMJ,OAAS,GAAKI,EAAM,KAAOvD,KAAKiB,aACzCsC,EAAMC,OAAO,EAAG,GAChB7D,EAAM4D,EAAME,KAAKzD,KAAKwB,aAEnBxB,KAAK4C,IAAIjD,KAAMqD,EAAMrD,GAAOK,KAAK6C,IAAIlD,KACvCK,MAEIgD,GAQRU,MAAO,WAGN,MAFA1D,MAAKoD,OAAO5D,OAAOC,KAAKO,KAAKsD,QAEtBtD,MAQR2D,MAAO,WAGN,MAFA3D,MAAKgB,QAAQ4C,QAEN5D,MAQR6D,MAAO,WACN,MAAOrE,QAAOC,KAAKO,KAAKsD,OAAOH,QAShCtD,OAAQ,SAAUA,GACjB,MAAO,IAAIU,GAAOV,EAAQG,KAAKiB,aAQhC6C,UAAW,WACV,MAAO9D,MAAKgB,SASblB,UAAW,SAAUA,GACpB,MAAO,IAAIS,GAAOjB,EAAUU,KAAKQ,mBAAoBR,KAAKgB,SAAUlB,IAQrEiE,aAAc,WACb,MAAO/D,MAAKiB,YAUb+C,UAAW,SAAUnE,GACpB,MAAOG,MAAKkB,cAAcrB,IAS5B,IAAIoE,IACHxD,MAAO,GAAIF,GAAO,QAASX,EAASE,WACpCa,QAAS,GAAIJ,GAAO,UAAWX,EAASE,WAGzC,OAAOmE,GAAQrE,EAASC,cAMzBvB,OAAQA,OAAOC","sourcesContent":["/**\n * angular-locker\n *\n * A simple & configurable abstraction for local/session storage in angular projects.\n *\n * @link https://github.com/tymondesigns/angular-locker\n * @author Sean Tymon @tymondesigns\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n\n(function(window, angular, undefined) {\n\n\t'use strict';\n\n\tangular.module('angular-locker', [])\n\n\t.config(function ($provide) {\n\t\t$provide.decorator('$exceptionHandler', ['$log', '$delegate', function($log, $delegate) {\n\t\t\treturn function(exception, cause) {\n\t\t\t\t$log.debug('[angular-locker] - ' + exception.message);\n\t\t\t\t$delegate(exception, cause);\n\t\t\t};\n\t\t}]);\n\t})\n\n\t.provider('locker', function () {\n\n\t\t/**\n\t\t * If value is a function then execute, otherwise return\n\t\t *\n\t\t * @param  {Mixed}  value\n\t\t * @return {Mixed}\n\t\t */\n\t\tvar _value = function (value) {\n\t\t\treturn angular.isFunction(value) ? value() : value;\n\t\t};\n\n\t\t/**\n\t\t * Get the key of an object by the value\n\t\t *\n\t\t * @param  {Object}  obj\n\t\t * @param  {Mixed}   value\n\t\t * @return {String}\n\t\t */\n\t\tvar _keyByVal = function (obj, value) {\n\t\t\treturn Object.keys(obj).filter(function (key) { return obj[key] === value; })[0];\n\t\t};\n\n\t\t/**\n\t\t * Set the default driver and namespace\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tvar defaults = {\n\t\t\tdriver: 'local',\n\t\t\tnamespace: 'locker'\n\t\t};\n\n\t\treturn {\n\n\t\t\t/**\n\t\t\t * Allow setting of default storage driver via `lockerProvider`\n\t\t\t * e.g. lockerProvider.setDefaultDriver('session');\n\t\t\t *\n\t\t\t * @param {String}  driver\n\t\t\t */\n\t\t\tsetDefaultDriver: function (driver) {\n\t\t\t\tdefaults.driver = _value(driver);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * getDefaultDriver\n\t\t\t */\n\t\t\tgetDefaultDriver: function () {\n\t\t\t\treturn defaults.driver;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Allow setting of default namespace via `lockerProvider`\n\t\t\t * e.g. lockerProvider.setDefaultNamespace('myAppName');\n\t\t\t *\n\t\t\t * @param {String}  namespace\n\t\t\t */\n\t\t\tsetDefaultNamespace: function (namespace) {\n\t\t\t\tdefaults.namespace = _value(namespace);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * getDefaultNamespace\n\t\t\t */\n\t\t\tgetDefaultNamespace: function () {\n\t\t\t\treturn defaults.namespace;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The locker service\n\t\t\t */\n\t\t\t$get: ['$window', '$rootScope', function ($window, $rootScope) {\n\n\t\t\t\t/**\n\t\t\t\t * Define the Locker class\n\t\t\t\t *\n\t\t\t\t * @param {Storage}  driver\n\t\t\t\t * @param {String}   namespace\n\t\t\t\t */\n\t\t\t\tfunction Locker (driver, namespace) {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @type {Object}\n\t\t\t\t\t */\n\t\t\t\t\tthis._registeredDrivers = {\n\t\t\t\t\t\tlocal: $window.localStorage,\n\t\t\t\t\t\tsession: $window.sessionStorage\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Get the Storage instance from the key\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  driver\n\t\t\t\t\t * @return {Storage}\n\t\t\t\t\t */\n\t\t\t\t\tthis._resolveDriver = function (driver) {\n\t\t\t\t\t\tif (! this._registeredDrivers.hasOwnProperty(driver)) {\n\t\t\t\t\t\t\tthrow new Error('The driver \"' + driver + '\" was not found. Defaulting to local.');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// fallback gracefully to localStorage\n\t\t\t\t\t\treturn this._registeredDrivers[driver] || this._registeredDrivers.local;\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @type {Storage}\n\t\t\t\t\t */\n\t\t\t\t\tthis._driver = this._resolveDriver(driver);\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @type {String}\n\t\t\t\t\t */\n\t\t\t\t\tthis._namespace = namespace;\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Check browser support\n\t\t\t\t\t *\n\t\t\t\t\t * @see https://github.com/Modernizr/Modernizr/blob/master/feature-detects/storage/localstorage.js#L38-L47\n\t\t\t\t\t * @param  {String}  driver\n\t\t\t\t\t * @return {Boolean}\n\t\t\t\t\t */\n\t\t\t\t\tthis._checkSupport = function (driver) {\n\t\t\t\t\t\tif (typeof this._supported === 'undefined') {\n\t\t\t\t\t\t\tvar l = 'l';\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tthis._resolveDriver(driver || 'local').setItem(l, l);\n\t\t\t\t\t\t\t\tthis._resolveDriver(driver || 'local').removeItem(l);\n\t\t\t\t\t\t\t\tthis._supported = true;\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tthis._supported = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this._supported;\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @type {String}\n\t\t\t\t\t */\n\t\t\t\t\tthis._separator = '.';\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Build the storage key from the namspace\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  key\n\t\t\t\t\t * @return {String}\n\t\t\t\t\t */\n\t\t\t\t\tthis._getPrefix = function (key) {\n\t\t\t\t\t\treturn this._namespace + this._separator + key;\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Try to encode value as json, or just return the value upon failure\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {Mixed}  value\n\t\t\t\t\t * @return {Mixed}\n\t\t\t\t\t */\n\t\t\t\t\tthis._serialize = function (value) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn angular.toJson(value);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Try to parse value as json, if it fails then it probably isn't json so just return it\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  value\n\t\t\t\t\t * @return {Object|String}\n\t\t\t\t\t */\n\t\t\t\t\tthis._unserialize = function (value) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn angular.fromJson(value);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Add to storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param {String}  key\n\t\t\t\t\t * @param {Mixed}  value\n\t\t\t\t\t */\n\t\t\t\t\tthis._setItem = function (key, value) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tthis._driver.setItem(this._getPrefix(key), this._serialize(value));\n\t\t\t\t\t\t\t$rootScope.$emit('locker.item.added', {\n\t\t\t\t\t\t\t\tdriver: this._driver,\n\t\t\t\t\t\t\t\tnamespace: this._namespace,\n\t\t\t\t\t\t\t\tkey: key,\n\t\t\t\t\t\t\t\tvalue: value\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tif (['QUOTA_EXCEEDED_ERR', 'NS_ERROR_DOM_QUOTA_REACHED', 'QuotaExceededError'].indexOf(e.name) !== -1) {\n\t\t\t\t\t\t\t\tthrow new Error('Your browser storage quota has been exceeded');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error('Could not add item with key \"' + key + '\"');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Get from storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  key\n\t\t\t\t\t * @return {Mixed}\n\t\t\t\t\t */\n\t\t\t\t\tthis._getItem = function (key) {\n\t\t\t\t\t\treturn this._unserialize(this._driver.getItem(this._getPrefix(key)));\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Exists in storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  key\n\t\t\t\t\t * @return {Boolean}\n\t\t\t\t\t */\n\t\t\t\t\tthis._exists = function (key) {\n\t\t\t\t\t\treturn this._driver.hasOwnProperty(this._getPrefix(_value(key)));\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Remove from storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  key\n\t\t\t\t\t * @return {Boolean}\n\t\t\t\t\t */\n\t\t\t\t\tthis._removeItem = function (key) {\n\t\t\t\t\t\tif (! this._exists(key)) return false;\n\t\t\t\t\t\tthis._driver.removeItem(this._getPrefix(key));\n\t\t\t\t\t\t$rootScope.$emit('locker.item.removed', {\n\t\t\t\t\t\t\tdriver: this._driver,\n\t\t\t\t\t\t\tnamespace: this._namespace,\n\t\t\t\t\t\t\tkey: key\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Define the public api\n\t\t\t\t *\n\t\t\t\t * @type {Object}\n\t\t\t\t */\n\t\t\t\tLocker.prototype = {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Add a new item to storage (even if it already exists)\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {Mixed}  key\n\t\t\t\t\t * @param  {Mixed}  value\n\t\t\t\t\t * @return {self}\n\t\t\t\t\t */\n\t\t\t\t\tput: function (key, value) {\n\t\t\t\t\t\tif (! key) return false;\n\t\t\t\t\t\tkey = _value(key);\n\n\t\t\t\t\t\tif (angular.isObject(key)) {\n\t\t\t\t\t\t\tangular.forEach(key, function (value, key) {\n\t\t\t\t\t\t\t\tthis._setItem(key, value);\n\t\t\t\t\t\t\t}, this);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (! angular.isDefined(value)) return false;\n\t\t\t\t\t\t\tthis._setItem(key, _value(value));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Add an item to storage if it doesn't already exist\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {Mixed}  key\n\t\t\t\t\t * @param  {Mixed}  value\n\t\t\t\t\t * @return {Boolean}\n\t\t\t\t\t */\n\t\t\t\t\tadd: function (key, value) {\n\t\t\t\t\t\tif (! this.has(key)) {\n\t\t\t\t\t\t\tthis.put(key, value);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Retrieve the specified item from storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String|Array}  key\n\t\t\t\t\t * @param  {Mixed}  def\n\t\t\t\t\t * @return {Mixed}\n\t\t\t\t\t */\n\t\t\t\t\tget: function (key, def) {\n\t\t\t\t\t\tif (angular.isArray(key)) {\n\t\t\t\t\t\t\tvar items = {};\n\t\t\t\t\t\t\tangular.forEach(key, function (k) {\n\t\t\t\t\t\t\t\tif (this.has(k)) items[k] = this._getItem(k);\n\t\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t\treturn items;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (! this.has(key)) return arguments.length === 2 ? def : void 0;\n\n\t\t\t\t\t\treturn this._getItem(key);\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Determine whether the item exists in storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String|Function}  key\n\t\t\t\t\t * @return {Boolean}\n\t\t\t\t\t */\n\t\t\t\t\thas: function (key) {\n\t\t\t\t\t\treturn this._exists(key);\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Remove specified item(s) from storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {Mixed}  key\n\t\t\t\t\t * @return {Object}\n\t\t\t\t\t */\n\t\t\t\t\tforget: function (key) {\n\t\t\t\t\t\tkey = _value(key);\n\n\t\t\t\t\t\tif (angular.isArray(key)) {\n\t\t\t\t\t\t\tangular.forEach(key, function (key) {\n\t\t\t\t\t\t\t\tthis._removeItem(key);\n\t\t\t\t\t\t\t}, this);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._removeItem(key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Retrieve the specified item from storage and then remove it\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String|Array}  key\n\t\t\t\t\t * @param  {Mixed}  def\n\t\t\t\t\t * @return {Mixed}\n\t\t\t\t\t */\n\t\t\t\t\tpull: function (key, def) {\n\t\t\t\t\t\tvar value = this.get(key, def);\n\t\t\t\t\t\tthis.forget(key);\n\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Return all items in storage within the current namespace\n\t\t\t\t\t *\n\t\t\t\t\t * @return {Object}\n\t\t\t\t\t */\n\t\t\t\t\tall: function () {\n\t\t\t\t\t\tvar items = {};\n\t\t\t\t\t\tangular.forEach(this._driver, function (value, key) {\n\t\t\t\t\t\t\tvar split = key.split(this._separator);\n\t\t\t\t\t\t\tif (split.length > 1 && split[0] === this._namespace) {\n\t\t\t\t\t\t\t\tsplit.splice(0, 1);\n\t\t\t\t\t\t\t\tkey = split.join(this._separator);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (this.has(key)) items[key] = this.get(key);\n\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\treturn items;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Remove all items set within the current namespace\n\t\t\t\t\t *\n\t\t\t\t\t * @return {self}\n\t\t\t\t\t */\n\t\t\t\t\tclean: function () {\n\t\t\t\t\t\tthis.forget(Object.keys(this.all()));\n\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Empty the current storage driver completely\n\t\t\t\t\t *\n\t\t\t\t\t * @return {self}\n\t\t\t\t\t */\n\t\t\t\t\tempty: function () {\n\t\t\t\t\t\tthis._driver.clear();\n\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Get the total number of items within the current namespace\n\t\t\t\t\t *\n\t\t\t\t\t * @return {Integer}\n\t\t\t\t\t */\n\t\t\t\t\tcount: function () {\n\t\t\t\t\t\treturn Object.keys(this.all()).length;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Set the storage driver on a new instance to enable overriding defaults\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  driver\n\t\t\t\t\t * @return {self}\n\t\t\t\t\t */\n\t\t\t\t\tdriver: function (driver) {\n\t\t\t\t\t\treturn new Locker(driver, this._namespace);\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Get the currently set driver\n\t\t\t\t\t *\n\t\t\t\t\t * @return {Storage}\n\t\t\t\t\t */\n\t\t\t\t\tgetDriver: function () {\n\t\t\t\t\t\treturn this._driver;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Set the namespace on a new instance to enable overriding defaults\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  namespace\n\t\t\t\t\t * @return {self}\n\t\t\t\t\t */\n\t\t\t\t\tnamespace: function (namespace) {\n\t\t\t\t\t\treturn new Locker(_keyByVal(this._registeredDrivers, this._driver), namespace);\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Get the currently set namespace\n\t\t\t\t\t *\n\t\t\t\t\t * @return {String}\n\t\t\t\t\t */\n\t\t\t\t\tgetNamespace: function () {\n\t\t\t\t\t\treturn this._namespace;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Check browser support\n\t\t\t\t\t *\n\t\t\t\t\t * @see https://github.com/Modernizr/Modernizr/blob/master/feature-detects/storage/localstorage.js#L38-L47\n\t\t\t\t\t * @param  {String}  driver\n\t\t\t\t\t * @return {Boolean}\n\t\t\t\t\t */\n\t\t\t\t\tsupported: function (driver) {\n\t\t\t\t\t\treturn this._checkSupport(driver);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * Create the driver instances\n\t\t\t\t *\n\t\t\t\t * @type {Object}\n\t\t\t\t */\n\t\t\t\tvar drivers = {\n\t\t\t\t\tlocal: new Locker('local', defaults.namespace),\n\t\t\t\t\tsession: new Locker('session', defaults.namespace)\n\t\t\t\t};\n\n\t\t\t\treturn drivers[defaults.driver];\n\t\t\t}]\n\t\t};\n\n\t});\n\n})(window, window.angular);\n"],"sourceRoot":"/source/"}