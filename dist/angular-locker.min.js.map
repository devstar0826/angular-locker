/*! angular-locker v0.6.3 | (c) 2014 @tymondesigns | https://github.com/tymondesigns/angular-locker */
{"version":3,"file":"angular-locker.min.js","sources":["angular-locker.min.js"],"names":["window","angular","Locker","driver","namespace","this","_driver","_namespace","_registeredDrivers","local","localStorage","session","sessionStorage","_separator","_getPrefix","key","_resolveDriver","hasOwnProperty","_error","_serialize","value","toJson","e","_unserialize","fromJson","_setItem","setItem","indexOf","name","_getItem","getItem","_exists","_value","_removeItem","removeItem","isFunction","message","Error","prototype","put","isObject","forEach","isDefined","add","has","get","def","isArray","items","k","arguments","length","forget","pull","all","split","splice","join","clean","Object","keys","empty","clear","count","getDriver","getNamespace","supported","l","module","provider","defaults","drivers","setDefaultDriver","getDefaultDriver","setDefaultNamespace","getDefaultNamespace","$get"],"mappings":"CAUA,SAAUA,EAAQC,GAEjB,YAsBA,SAASC,GAAQC,EAAQC,GAKxBC,KAAKC,QAAUH,EAKfE,KAAKE,WAAaH,EAKlBC,KAAKG,oBACJC,MAAOT,EAAOU,aACdC,QAASX,EAAOY,gBAMjBP,KAAKQ,WAAa,IAQlBR,KAAKS,WAAa,SAAUC,GAC3B,MAAOV,MAAKE,WAAaF,KAAKQ,WAAaE,GAS5CV,KAAKW,eAAiB,SAAUb,GAM/B,MALME,MAAKG,mBAAmBS,eAAed,IAC5Ce,EAAO,eAAiBf,EAAS,yCAI3BE,KAAKG,mBAAmBL,IAAWE,KAAKG,mBAAmBC,OASnEJ,KAAKc,WAAa,SAAUC,GAC3B,IACC,MAAOnB,GAAQoB,OAAOD,GACrB,MAAOE,GACR,MAAOF,KAUTf,KAAKkB,aAAe,SAAUH,GAC7B,IACC,MAAOnB,GAAQuB,SAASJ,GACvB,MAAOE,GACR,MAAOF,KAUTf,KAAKoB,SAAW,SAAUV,EAAKK,GAC9B,IACCf,KAAKC,QAAQoB,QAAQrB,KAAKS,WAAWC,GAAMV,KAAKc,WAAWC,IAC1D,MAAOE,GAEPJ,EADkG,MAA9F,qBAAsB,6BAA8B,sBAAsBS,QAAQL,EAAEM,MACjF,+CAEA,gCAAkCb,EAAM,OAWlDV,KAAKwB,SAAW,SAAUd,GACzB,MAAOV,MAAKkB,aAAalB,KAAKC,QAAQwB,QAAQzB,KAAKS,WAAWC,MAS/DV,KAAK0B,QAAU,SAAUhB,GACxB,MAAOV,MAAKC,QAAQW,eAAeZ,KAAKS,WAAWkB,EAAOjB,MAS3DV,KAAK4B,YAAc,SAAUlB,GAC5B,MAAMV,MAAK0B,QAAQhB,IACnBV,KAAKC,QAAQ4B,WAAW7B,KAAKS,WAAWC,KACjC,IAFyB,GAzIlC,GAAIiB,GAAS,SAAUZ,GACtB,MAAOnB,GAAQkC,WAAWf,GAASA,IAAUA,GAG1CF,EAAS,SAAUkB,GACtB,KAAM,IAAIC,OAAMD,GA+IjBlC,GAAOoC,WASNC,IAAK,SAAUxB,EAAKK,GACnB,IAAML,EAAK,OAAO,CAGlB,IAFAA,EAAMiB,EAAOjB,GAETd,EAAQuC,SAASzB,GACpBd,EAAQwC,QAAQ1B,EAAK,SAAUK,EAAOL,GACrCV,KAAKoB,SAASV,EAAKK,IACjBf,UACG,CACN,IAAMJ,EAAQyC,UAAUtB,GAAQ,OAAO,CACvCf,MAAKoB,SAASV,EAAKiB,EAAOZ,IAG3B,MAAOf,OAURsC,IAAK,SAAU5B,EAAKK,GACnB,MAAMf,MAAKuC,IAAI7B,IAIR,GAHNV,KAAKkC,IAAIxB,EAAKK,IACP,IAYTyB,IAAK,SAAU9B,EAAK+B,GACnB,GAAI7C,EAAQ8C,QAAQhC,GAAM,CACzB,GAAIiC,KAKJ,OAJA/C,GAAQwC,QAAQ1B,EAAK,SAAUkC,GAC1B5C,KAAKuC,IAAIK,KAAID,EAAMC,GAAK5C,KAAKwB,SAASoB,KACxC5C,MAEI2C,EAGR,MAAM3C,MAAKuC,IAAI7B,GAERV,KAAKwB,SAASd,GAF4B,IAArBmC,UAAUC,OAAeL,EAAM,QAW5DF,IAAK,SAAU7B,GACd,MAAOV,MAAK0B,QAAQhB,IASrBqC,OAAQ,SAAUrC,GAWjB,MAVAA,GAAMiB,EAAOjB,GAETd,EAAQ8C,QAAQhC,GACnBd,EAAQwC,QAAQ1B,EAAK,SAAUA,GAC9BV,KAAK4B,YAAYlB,IACfV,MAEHA,KAAK4B,YAAYlB,GAGXV,MAURgD,KAAM,SAAUtC,EAAK+B,GACpB,GAAI1B,GAAQf,KAAKwC,IAAI9B,EAAK+B,EAG1B,OAFAzC,MAAK+C,OAAOrC,GAELK,GAQRkC,IAAK,WACJ,GAAIN,KAUJ,OATA/C,GAAQwC,QAAQpC,KAAKC,QAAS,SAAUc,EAAOL,GAC9C,GAAIwC,GAAQxC,EAAIwC,MAAMlD,KAAKQ,WACvB0C,GAAMJ,OAAS,GAAKI,EAAM,KAAOlD,KAAKE,aACzCgD,EAAMC,OAAO,EAAG,GAChBzC,EAAMwC,EAAME,KAAKpD,KAAKQ,aAEnBR,KAAKuC,IAAI7B,KAAMiC,EAAMjC,GAAOV,KAAKwC,IAAI9B,KACvCV,MAEI2C,GAQRU,MAAO,WAGN,MAFArD,MAAK+C,OAAOO,OAAOC,KAAKvD,KAAKiD,QAEtBjD,MAQRwD,MAAO,WAGN,MAFAxD,MAAKC,QAAQwD,QAENzD,MAQR0D,MAAO,WACN,MAAOJ,QAAOC,KAAKvD,KAAKiD,OAAOH,QAShChD,OAAQ,SAAUA,GACjB,MAAO,IAAID,GAAOG,KAAKW,eAAeb,GAASE,KAAKE,aAQrDyD,UAAW,WACV,MAAO3D,MAAKC,SASbF,UAAW,SAAUA,GACpB,MAAO,IAAIF,GAAOG,KAAKC,QAASF,IAQjC6D,aAAc,WACb,MAAO5D,MAAKE,YAUb2D,UAAW,SAAU/D,GACpB,GAAIgE,GAAI,GACR,KAGC,MAFA9D,MAAKW,eAAeb,GAAU,SAASuB,QAAQyC,EAAGA,GAClD9D,KAAKW,eAAeb,GAAU,SAAS+B,WAAWiC,IAC3C,EACN,MAAO7C,GACR,OAAO,KAKVrB,EAAQmE,OAAO,qBAWdC,SAAS,SAAU,WAEnB,GAAIC,IACHnE,OAAQ,QACRC,UAAW,UAGZmE,GACC9D,MAAO,GAAIP,GAAOF,EAAOU,aAAc4D,EAASlE,WAChDO,QAAS,GAAIT,GAAOF,EAAOY,eAAgB0D,EAASlE,WAGrD,QAQCoE,iBAAkB,SAAUrE,GAE3B,MADAmE,GAASnE,OAAS6B,EAAO7B,GAClBE,MAMRoE,iBAAkB,WACjB,MAAOH,GAASnE,QASjBuE,oBAAqB,SAAUtE,GAE9B,MADAkE,GAASlE,UAAY4B,EAAO5B,GACrBC,MAMRsE,oBAAqB,WACpB,MAAOL,GAASlE,WAMjBwE,KAAM,WACL,MAAOL,GAAQD,EAASnE,aAMzBH,OAAQA,OAAOC","sourcesContent":["/**\n * angular-locker\n *\n * A simple & configurable abstraction for local/session storage in angular projects.\n *\n * @link https://github.com/tymondesigns/angular-locker\n * @author Sean Tymon @tymondesigns\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n\n(function(window, angular, undefined) {\n\n\t'use strict';\n\n\t/**\n\t * If value is a function then execute, otherwise return\n\t *\n\t * @param  {Mixed}  value\n\t * @return {Mixed}\n\t */\n\tvar _value = function (value) {\n\t\treturn angular.isFunction(value) ? value() : value;\n\t};\n\n\tvar _error = function (message) {\n\t\tthrow new Error(message);\n\t};\n\n\t/**\n\t * Define the Locker class\n\t *\n\t * @param {Storage}  driver\n\t * @param {String}   namespace\n\t */\n\tfunction Locker (driver, namespace) {\n\n\t\t/**\n\t\t * @type {Storage}\n\t\t */\n\t\tthis._driver = driver;\n\n\t\t/**\n\t\t * @type {String}\n\t\t */\n\t\tthis._namespace = namespace;\n\n\t\t/**\n\t\t * @type {Object}\n\t\t */\n\t\tthis._registeredDrivers = {\n\t\t\tlocal: window.localStorage,\n\t\t\tsession: window.sessionStorage\n\t\t};\n\n\t\t/**\n\t\t * @type {String}\n\t\t */\n\t\tthis._separator = '.';\n\n\t\t/**\n\t\t * Build the storage key from the namspace\n\t\t *\n\t\t * @param  {String}  key\n\t\t * @return {String}\n\t\t */\n\t\tthis._getPrefix = function (key) {\n\t\t\treturn this._namespace + this._separator + key;\n\t\t};\n\n\t\t/**\n\t\t * Get the Storage instance from the key\n\t\t *\n\t\t * @param  {String}  driver\n\t\t * @return {Storage}\n\t\t */\n\t\tthis._resolveDriver = function (driver) {\n\t\t\tif (! this._registeredDrivers.hasOwnProperty(driver)) {\n\t\t\t\t_error('The driver \"' + driver + '\" was not found. Defaulting to local.');\n\t\t\t}\n\n\t\t\t// fallback gracefully to localStorage\n\t\t\treturn this._registeredDrivers[driver] || this._registeredDrivers.local;\n\t\t};\n\n\t\t/**\n\t\t * Try to encode value as json, or just return the value upon failure\n\t\t *\n\t\t * @param  {Mixed}  value\n\t\t * @return {Mixed}\n\t\t */\n\t\tthis._serialize = function (value) {\n\t\t\ttry {\n\t\t\t\treturn angular.toJson(value);\n\t\t\t} catch (e) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Try to parse value as json, if it fails then it probably isn't json so just return it\n\t\t *\n\t\t * @param  {String}  value\n\t\t * @return {Object|String}\n\t\t */\n\t\tthis._unserialize = function (value) {\n\t\t\ttry {\n\t\t\t\treturn angular.fromJson(value);\n\t\t\t} catch (e) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Add to storage\n\t\t *\n\t\t * @param {String}  key\n\t\t * @param {Mixed}  value\n\t\t */\n\t\tthis._setItem = function (key, value) {\n\t\t\ttry {\n\t\t\t\tthis._driver.setItem(this._getPrefix(key), this._serialize(value));\n\t\t\t} catch (e) {\n\t\t\t\tif (['QUOTA_EXCEEDED_ERR', 'NS_ERROR_DOM_QUOTA_REACHED', 'QuotaExceededError'].indexOf(e.name) !== -1) {\n\t\t\t\t\t_error('Your browser storage quota has been exceeded');\n\t\t\t\t} else {\n\t\t\t\t\t_error('Could not add item with key \"' + key + '\"');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Get from storage\n\t\t *\n\t\t * @param  {String}  key\n\t\t * @return {Mixed}\n\t\t */\n\t\tthis._getItem = function (key) {\n\t\t\treturn this._unserialize(this._driver.getItem(this._getPrefix(key)));\n\t\t};\n\n\t\t/**\n\t\t * Exists in storage\n\t\t *\n\t\t * @param  {String}  key\n\t\t * @return {Boolean}\n\t\t */\n\t\tthis._exists = function (key) {\n\t\t\treturn this._driver.hasOwnProperty(this._getPrefix(_value(key)));\n\t\t};\n\n\t\t/**\n\t\t * Remove from storage\n\t\t *\n\t\t * @param  {String}  key\n\t\t * @return {Boolean}\n\t\t */\n\t\tthis._removeItem = function (key) {\n\t\t\tif (! this._exists(key)) return false;\n\t\t\tthis._driver.removeItem(this._getPrefix(key));\n\t\t\treturn true;\n\t\t};\n\t}\n\n\t/**\n\t * Define the public api\n\t *\n\t * @type {Object}\n\t */\n\tLocker.prototype = {\n\n\t\t/**\n\t\t * Add a new item to storage (even if it already exists)\n\t\t *\n\t\t * @param  {Mixed}  key\n\t\t * @param  {Mixed}  value\n\t\t * @return {self}\n\t\t */\n\t\tput: function (key, value) {\n\t\t\tif (! key) return false;\n\t\t\tkey = _value(key);\n\n\t\t\tif (angular.isObject(key)) {\n\t\t\t\tangular.forEach(key, function (value, key) {\n\t\t\t\t\tthis._setItem(key, value);\n\t\t\t\t}, this);\n\t\t\t} else {\n\t\t\t\tif (! angular.isDefined(value)) return false;\n\t\t\t\tthis._setItem(key, _value(value));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Add an item to storage if it doesn't already exist\n\t\t *\n\t\t * @param  {Mixed}  key\n\t\t * @param  {Mixed}  value\n\t\t * @return {Boolean}\n\t\t */\n\t\tadd: function (key, value) {\n\t\t\tif (! this.has(key)) {\n\t\t\t\tthis.put(key, value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the specified item from storage\n\t\t *\n\t\t * @param  {String|Array}  key\n\t\t * @param  {Mixed}  def\n\t\t * @return {Mixed}\n\t\t */\n\t\tget: function (key, def) {\n\t\t\tif (angular.isArray(key)) {\n\t\t\t\tvar items = {};\n\t\t\t\tangular.forEach(key, function (k) {\n\t\t\t\t\tif (this.has(k)) items[k] = this._getItem(k);\n\t\t\t\t}, this);\n\n\t\t\t\treturn items;\n\t\t\t}\n\n\t\t\tif (! this.has(key)) return arguments.length === 2 ? def : void 0;\n\n\t\t\treturn this._getItem(key);\n\t\t},\n\n\t\t/**\n\t\t * Determine whether the item exists in storage\n\t\t *\n\t\t * @param  {String|Function}  key\n\t\t * @return {Boolean}\n\t\t */\n\t\thas: function (key) {\n\t\t\treturn this._exists(key);\n\t\t},\n\n\t\t/**\n\t\t * Remove specified item(s) from storage\n\t\t *\n\t\t * @param  {Mixed}  key\n\t\t * @return {Object}\n\t\t */\n\t\tforget: function (key) {\n\t\t\tkey = _value(key);\n\n\t\t\tif (angular.isArray(key)) {\n\t\t\t\tangular.forEach(key, function (key) {\n\t\t\t\t\tthis._removeItem(key);\n\t\t\t\t}, this);\n\t\t\t} else {\n\t\t\t\tthis._removeItem(key);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Retrieve the specified item from storage and then remove it\n\t\t *\n\t\t * @param  {String|Array}  key\n\t\t * @param  {Mixed}  def\n\t\t * @return {Mixed}\n\t\t */\n\t\tpull: function (key, def) {\n\t\t\tvar value = this.get(key, def);\n\t\t\tthis.forget(key);\n\n\t\t\treturn value;\n\t\t},\n\n\t\t/**\n\t\t * Return all items in storage within the current namespace\n\t\t *\n\t\t * @return {Object}\n\t\t */\n\t\tall: function () {\n\t\t\tvar items = {};\n\t\t\tangular.forEach(this._driver, function (value, key) {\n\t\t\t\tvar split = key.split(this._separator);\n\t\t\t\tif (split.length > 1 && split[0] === this._namespace) {\n\t\t\t\t\tsplit.splice(0, 1);\n\t\t\t\t\tkey = split.join(this._separator);\n\t\t\t\t}\n\t\t\t\tif (this.has(key)) items[key] = this.get(key);\n\t\t\t}, this);\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * Remove all items set within the current namespace\n\t\t *\n\t\t * @return {self}\n\t\t */\n\t\tclean: function () {\n\t\t\tthis.forget(Object.keys(this.all()));\n\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Empty the current storage driver completely\n\t\t *\n\t\t * @return {self}\n\t\t */\n\t\tempty: function () {\n\t\t\tthis._driver.clear();\n\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Get the total number of items within the current namespace\n\t\t *\n\t\t * @return {Integer}\n\t\t */\n\t\tcount: function () {\n\t\t\treturn Object.keys(this.all()).length;\n\t\t},\n\n\t\t/**\n\t\t * Set the storage driver on a new instance to enable overriding defaults\n\t\t *\n\t\t * @param  {String}  driver\n\t\t * @return {self}\n\t\t */\n\t\tdriver: function (driver) {\n\t\t\treturn new Locker(this._resolveDriver(driver), this._namespace);\n\t\t},\n\n\t\t/**\n\t\t * Get the currently set driver\n\t\t *\n\t\t * @return {Storage}\n\t\t */\n\t\tgetDriver: function () {\n\t\t\treturn this._driver;\n\t\t},\n\n\t\t/**\n\t\t * Set the namespace on a new instance to enable overriding defaults\n\t\t *\n\t\t * @param  {String}  namespace\n\t\t * @return {self}\n\t\t */\n\t\tnamespace: function (namespace) {\n\t\t\treturn new Locker(this._driver, namespace);\n\t\t},\n\n\t\t/**\n\t\t * Get the currently set namespace\n\t\t *\n\t\t * @return {String}\n\t\t */\n\t\tgetNamespace: function () {\n\t\t\treturn this._namespace;\n\t\t},\n\n\t\t/**\n\t\t * Check browser support\n\t\t *\n\t\t * @see https://github.com/Modernizr/Modernizr/blob/master/feature-detects/storage/localstorage.js#L38-L47\n\t\t * @param {String}  driver\n\t\t * @return {Boolean}\n\t\t */\n\t\tsupported: function (driver) {\n\t\t\tvar l = 'l';\n\t\t\ttry {\n\t\t\t\tthis._resolveDriver(driver || 'local').setItem(l, l);\n\t\t\t\tthis._resolveDriver(driver || 'local').removeItem(l);\n\t\t\t\treturn true;\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t};\n\n\tangular.module('angular-locker', [])\n\n\t// .config(function ($provide) {\n\t// \t$provide.decorator('$exceptionHandler', ['$log', '$delegate', function($log, $delegate) {\n\t// \t\treturn function(exception, cause) {\n\t// \t\t\t$log.debug('[angular-locker] - ' + exception.message);\n\t// \t\t\t$delegate(exception, cause);\n\t// \t\t};\n\t// \t}]);\n\t// })\n\n\t.provider('locker', function locker () {\n\n\t\tvar defaults = {\n\t\t\tdriver: 'local',\n\t\t\tnamespace: 'locker'\n\t\t},\n\n\t\tdrivers = {\n\t\t\tlocal: new Locker(window.localStorage, defaults.namespace),\n\t\t\tsession: new Locker(window.sessionStorage, defaults.namespace)\n\t\t};\n\n\t\treturn {\n\n\t\t\t/**\n\t\t\t * Allow setting of default storage driver via `lockerProvider`\n\t\t\t * e.g. lockerProvider.setDefaultDriver('session');\n\t\t\t *\n\t\t\t * @param {String}  driver\n\t\t\t */\n\t\t\tsetDefaultDriver: function (driver) {\n\t\t\t\tdefaults.driver = _value(driver);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * getDefaultDriver\n\t\t\t */\n\t\t\tgetDefaultDriver: function () {\n\t\t\t\treturn defaults.driver;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Allow setting of default namespace via `lockerProvider`\n\t\t\t * e.g. lockerProvider.setDefaultNamespace('myAppName');\n\t\t\t *\n\t\t\t * @param {String}  namespace\n\t\t\t */\n\t\t\tsetDefaultNamespace: function (namespace) {\n\t\t\t\tdefaults.namespace = _value(namespace);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * getDefaultNamespace\n\t\t\t */\n\t\t\tgetDefaultNamespace: function () {\n\t\t\t\treturn defaults.namespace;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The locker service\n\t\t\t */\n\t\t\t$get: function () {\n\t\t\t\treturn drivers[defaults.driver];\n\t\t\t}\n\t\t};\n\n\t});\n\n})(window, window.angular);\n"],"sourceRoot":"/source/"}