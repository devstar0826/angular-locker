/*! angular-locker v0.6.3 | (c) 2014 @tymondesigns | https://github.com/tymondesigns/angular-locker */
{"version":3,"file":"angular-locker.min.js","sources":["angular-locker.min.js"],"names":["window","angular","module","provider","_value","value","isFunction","defaults","driver","namespace","setDefaultDriver","this","getDefaultDriver","setDefaultNamespace","getDefaultNamespace","$get","$window","$log","$rootScope","Locker","_driver","_namespace","_checkSupport","_supported","l","_resolveDriver","setItem","removeItem","e","_registeredDrivers","local","localStorage","session","sessionStorage","_separator","_getPrefix","key","hasOwnProperty","_error","_serialize","toJson","_unserialize","fromJson","_setItem","$emit","indexOf","name","_getItem","getItem","_exists","_removeItem","message","Error","prototype","put","isObject","forEach","isDefined","add","has","get","def","isArray","items","k","arguments","length","forget","pull","all","split","splice","join","clean","Object","keys","empty","clear","count","getDriver","getNamespace","supported","drivers"],"mappings":"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","sourcesContent":["/**\n * angular-locker\n *\n * A simple & configurable abstraction for local/session storage in angular projects.\n *\n * @link https://github.com/tymondesigns/angular-locker\n * @author Sean Tymon @tymondesigns\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n\n(function(window, angular, undefined) {\n\n\t'use strict';\n\n\tangular.module('angular-locker', [])\n\n\t.provider('locker', function () {\n\n\t\t/**\n\t\t * If value is a function then execute, otherwise return\n\t\t *\n\t\t * @param  {Mixed}  value\n\t\t * @return {Mixed}\n\t\t */\n\t\tvar _value = function (value) {\n\t\t\treturn angular.isFunction(value) ? value() : value;\n\t\t};\n\n\t\t/**\n\t\t * Set the default driver and namespace\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tvar defaults = {\n\t\t\tdriver: 'local',\n\t\t\tnamespace: 'locker'\n\t\t};\n\n\t\treturn {\n\n\t\t\t/**\n\t\t\t * Allow setting of default storage driver via `lockerProvider`\n\t\t\t * e.g. lockerProvider.setDefaultDriver('session');\n\t\t\t *\n\t\t\t * @param {String}  driver\n\t\t\t */\n\t\t\tsetDefaultDriver: function (driver) {\n\t\t\t\tdefaults.driver = _value(driver);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * getDefaultDriver\n\t\t\t */\n\t\t\tgetDefaultDriver: function () {\n\t\t\t\treturn defaults.driver;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Allow setting of default namespace via `lockerProvider`\n\t\t\t * e.g. lockerProvider.setDefaultNamespace('myAppName');\n\t\t\t *\n\t\t\t * @param {String}  namespace\n\t\t\t */\n\t\t\tsetDefaultNamespace: function (namespace) {\n\t\t\t\tdefaults.namespace = _value(namespace);\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * getDefaultNamespace\n\t\t\t */\n\t\t\tgetDefaultNamespace: function () {\n\t\t\t\treturn defaults.namespace;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The locker service\n\t\t\t */\n\t\t\t$get: ['$window', '$log', '$rootScope', function ($window, $log, $rootScope) {\n\n\t\t\t\tvar _error = function (message) {\n\t\t\t\t\tthrow new Error(message);\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * Define the Locker class\n\t\t\t\t *\n\t\t\t\t * @param {Storage}  driver\n\t\t\t\t * @param {String}   namespace\n\t\t\t\t */\n\t\t\t\tfunction Locker (driver, namespace) {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @type {Storage}\n\t\t\t\t\t */\n\t\t\t\t\tthis._driver = driver;\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @type {String}\n\t\t\t\t\t */\n\t\t\t\t\tthis._namespace = namespace;\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Check browser support\n\t\t\t\t\t *\n\t\t\t\t\t * @see https://github.com/Modernizr/Modernizr/blob/master/feature-detects/storage/localstorage.js#L38-L47\n\t\t\t\t\t * @param  {String}  driver\n\t\t\t\t\t * @return {Boolean}\n\t\t\t\t\t */\n\t\t\t\t\tthis._checkSupport = function (driver) {\n\t\t\t\t\t\tif (typeof this._supported === 'undefined') {\n\t\t\t\t\t\t\tvar l = 'l';\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tthis._resolveDriver(driver || 'local').setItem(l, l);\n\t\t\t\t\t\t\t\tthis._resolveDriver(driver || 'local').removeItem(l);\n\t\t\t\t\t\t\t\tthis._supported = true;\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tthis._supported = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this._supported;\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @type {Object}\n\t\t\t\t\t */\n\t\t\t\t\tthis._registeredDrivers = {\n\t\t\t\t\t\tlocal: $window.localStorage,\n\t\t\t\t\t\tsession: $window.sessionStorage\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @type {String}\n\t\t\t\t\t */\n\t\t\t\t\tthis._separator = '.';\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Build the storage key from the namspace\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  key\n\t\t\t\t\t * @return {String}\n\t\t\t\t\t */\n\t\t\t\t\tthis._getPrefix = function (key) {\n\t\t\t\t\t\treturn this._namespace + this._separator + key;\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Get the Storage instance from the key\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  driver\n\t\t\t\t\t * @return {Storage}\n\t\t\t\t\t */\n\t\t\t\t\tthis._resolveDriver = function (driver) {\n\t\t\t\t\t\tif (! this._registeredDrivers.hasOwnProperty(driver)) {\n\t\t\t\t\t\t\t_error('The driver \"' + driver + '\" was not found. Defaulting to local.');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// fallback gracefully to localStorage\n\t\t\t\t\t\treturn this._registeredDrivers[driver] || this._registeredDrivers.local;\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Try to encode value as json, or just return the value upon failure\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {Mixed}  value\n\t\t\t\t\t * @return {Mixed}\n\t\t\t\t\t */\n\t\t\t\t\tthis._serialize = function (value) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn angular.toJson(value);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Try to parse value as json, if it fails then it probably isn't json so just return it\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  value\n\t\t\t\t\t * @return {Object|String}\n\t\t\t\t\t */\n\t\t\t\t\tthis._unserialize = function (value) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn angular.fromJson(value);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Add to storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param {String}  key\n\t\t\t\t\t * @param {Mixed}  value\n\t\t\t\t\t */\n\t\t\t\t\tthis._setItem = function (key, value) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tthis._driver.setItem(this._getPrefix(key), this._serialize(value));\n\t\t\t\t\t\t\t$rootScope.$emit('locker.item.added', value);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tif (['QUOTA_EXCEEDED_ERR', 'NS_ERROR_DOM_QUOTA_REACHED', 'QuotaExceededError'].indexOf(e.name) !== -1) {\n\t\t\t\t\t\t\t\t_error('Your browser storage quota has been exceeded');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_error('Could not add item with key \"' + key + '\"');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Get from storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  key\n\t\t\t\t\t * @return {Mixed}\n\t\t\t\t\t */\n\t\t\t\t\tthis._getItem = function (key) {\n\t\t\t\t\t\treturn this._unserialize(this._driver.getItem(this._getPrefix(key)));\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Exists in storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  key\n\t\t\t\t\t * @return {Boolean}\n\t\t\t\t\t */\n\t\t\t\t\tthis._exists = function (key) {\n\t\t\t\t\t\treturn this._driver.hasOwnProperty(this._getPrefix(_value(key)));\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Remove from storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  key\n\t\t\t\t\t * @return {Boolean}\n\t\t\t\t\t */\n\t\t\t\t\tthis._removeItem = function (key) {\n\t\t\t\t\t\tif (! this._exists(key)) return false;\n\t\t\t\t\t\tthis._driver.removeItem(this._getPrefix(key));\n\t\t\t\t\t\t$rootScope.$emit('locker.item.removed', key);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Define the public api\n\t\t\t\t *\n\t\t\t\t * @type {Object}\n\t\t\t\t */\n\t\t\t\tLocker.prototype = {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Add a new item to storage (even if it already exists)\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {Mixed}  key\n\t\t\t\t\t * @param  {Mixed}  value\n\t\t\t\t\t * @return {self}\n\t\t\t\t\t */\n\t\t\t\t\tput: function (key, value) {\n\t\t\t\t\t\tif (! key) return false;\n\t\t\t\t\t\tkey = _value(key);\n\n\t\t\t\t\t\tif (angular.isObject(key)) {\n\t\t\t\t\t\t\tangular.forEach(key, function (value, key) {\n\t\t\t\t\t\t\t\tthis._setItem(key, value);\n\t\t\t\t\t\t\t}, this);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (! angular.isDefined(value)) return false;\n\t\t\t\t\t\t\tthis._setItem(key, _value(value));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Add an item to storage if it doesn't already exist\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {Mixed}  key\n\t\t\t\t\t * @param  {Mixed}  value\n\t\t\t\t\t * @return {Boolean}\n\t\t\t\t\t */\n\t\t\t\t\tadd: function (key, value) {\n\t\t\t\t\t\tif (! this.has(key)) {\n\t\t\t\t\t\t\tthis.put(key, value);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Retrieve the specified item from storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String|Array}  key\n\t\t\t\t\t * @param  {Mixed}  def\n\t\t\t\t\t * @return {Mixed}\n\t\t\t\t\t */\n\t\t\t\t\tget: function (key, def) {\n\t\t\t\t\t\tif (angular.isArray(key)) {\n\t\t\t\t\t\t\tvar items = {};\n\t\t\t\t\t\t\tangular.forEach(key, function (k) {\n\t\t\t\t\t\t\t\tif (this.has(k)) items[k] = this._getItem(k);\n\t\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t\treturn items;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (! this.has(key)) return arguments.length === 2 ? def : void 0;\n\n\t\t\t\t\t\treturn this._getItem(key);\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Determine whether the item exists in storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String|Function}  key\n\t\t\t\t\t * @return {Boolean}\n\t\t\t\t\t */\n\t\t\t\t\thas: function (key) {\n\t\t\t\t\t\treturn this._exists(key);\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Remove specified item(s) from storage\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {Mixed}  key\n\t\t\t\t\t * @return {Object}\n\t\t\t\t\t */\n\t\t\t\t\tforget: function (key) {\n\t\t\t\t\t\tkey = _value(key);\n\n\t\t\t\t\t\tif (angular.isArray(key)) {\n\t\t\t\t\t\t\tangular.forEach(key, function (key) {\n\t\t\t\t\t\t\t\tthis._removeItem(key);\n\t\t\t\t\t\t\t}, this);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._removeItem(key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Retrieve the specified item from storage and then remove it\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String|Array}  key\n\t\t\t\t\t * @param  {Mixed}  def\n\t\t\t\t\t * @return {Mixed}\n\t\t\t\t\t */\n\t\t\t\t\tpull: function (key, def) {\n\t\t\t\t\t\tvar value = this.get(key, def);\n\t\t\t\t\t\tthis.forget(key);\n\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Return all items in storage within the current namespace\n\t\t\t\t\t *\n\t\t\t\t\t * @return {Object}\n\t\t\t\t\t */\n\t\t\t\t\tall: function () {\n\t\t\t\t\t\tvar items = {};\n\t\t\t\t\t\tangular.forEach(this._driver, function (value, key) {\n\t\t\t\t\t\t\tvar split = key.split(this._separator);\n\t\t\t\t\t\t\tif (split.length > 1 && split[0] === this._namespace) {\n\t\t\t\t\t\t\t\tsplit.splice(0, 1);\n\t\t\t\t\t\t\t\tkey = split.join(this._separator);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (this.has(key)) items[key] = this.get(key);\n\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\treturn items;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Remove all items set within the current namespace\n\t\t\t\t\t *\n\t\t\t\t\t * @return {self}\n\t\t\t\t\t */\n\t\t\t\t\tclean: function () {\n\t\t\t\t\t\tthis.forget(Object.keys(this.all()));\n\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Empty the current storage driver completely\n\t\t\t\t\t *\n\t\t\t\t\t * @return {self}\n\t\t\t\t\t */\n\t\t\t\t\tempty: function () {\n\t\t\t\t\t\tthis._driver.clear();\n\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Get the total number of items within the current namespace\n\t\t\t\t\t *\n\t\t\t\t\t * @return {Integer}\n\t\t\t\t\t */\n\t\t\t\t\tcount: function () {\n\t\t\t\t\t\treturn Object.keys(this.all()).length;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Set the storage driver on a new instance to enable overriding defaults\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  driver\n\t\t\t\t\t * @return {self}\n\t\t\t\t\t */\n\t\t\t\t\tdriver: function (driver) {\n\t\t\t\t\t\treturn new Locker(this._resolveDriver(driver), this._namespace);\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Get the currently set driver\n\t\t\t\t\t *\n\t\t\t\t\t * @return {Storage}\n\t\t\t\t\t */\n\t\t\t\t\tgetDriver: function () {\n\t\t\t\t\t\treturn this._driver;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Set the namespace on a new instance to enable overriding defaults\n\t\t\t\t\t *\n\t\t\t\t\t * @param  {String}  namespace\n\t\t\t\t\t * @return {self}\n\t\t\t\t\t */\n\t\t\t\t\tnamespace: function (namespace) {\n\t\t\t\t\t\treturn new Locker(this._driver, namespace);\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Get the currently set namespace\n\t\t\t\t\t *\n\t\t\t\t\t * @return {String}\n\t\t\t\t\t */\n\t\t\t\t\tgetNamespace: function () {\n\t\t\t\t\t\treturn this._namespace;\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Check browser support\n\t\t\t\t\t *\n\t\t\t\t\t * @see https://github.com/Modernizr/Modernizr/blob/master/feature-detects/storage/localstorage.js#L38-L47\n\t\t\t\t\t * @param  {String}  driver\n\t\t\t\t\t * @return {Boolean}\n\t\t\t\t\t */\n\t\t\t\t\tsupported: function (driver) {\n\t\t\t\t\t\treturn this._checkSupport(driver);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * Create the driver instances\n\t\t\t\t *\n\t\t\t\t * @type {Object}\n\t\t\t\t */\n\t\t\t\tvar drivers = {\n\t\t\t\t\tlocal: new Locker($window.localStorage, defaults.namespace),\n\t\t\t\t\tsession: new Locker($window.sessionStorage, defaults.namespace)\n\t\t\t\t};\n\n\t\t\t\treturn drivers[defaults.driver];\n\t\t\t}]\n\t\t};\n\n\t});\n\n})(window, window.angular);\n"],"sourceRoot":"/source/"}